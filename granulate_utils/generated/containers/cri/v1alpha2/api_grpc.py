# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: v1alpha2/api.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import github.com.gogo.protobuf.gogoproto.gogo_pb2
import v1alpha2.api_pb2


class RuntimeServiceBase(abc.ABC):

    @abc.abstractmethod
    async def Version(self, stream: 'grpclib.server.Stream[v1alpha2.api_pb2.VersionRequest, v1alpha2.api_pb2.VersionResponse]') -> None:
        pass

    @abc.abstractmethod
    async def RunPodSandbox(self, stream: 'grpclib.server.Stream[v1alpha2.api_pb2.RunPodSandboxRequest, v1alpha2.api_pb2.RunPodSandboxResponse]') -> None:
        pass

    @abc.abstractmethod
    async def StopPodSandbox(self, stream: 'grpclib.server.Stream[v1alpha2.api_pb2.StopPodSandboxRequest, v1alpha2.api_pb2.StopPodSandboxResponse]') -> None:
        pass

    @abc.abstractmethod
    async def RemovePodSandbox(self, stream: 'grpclib.server.Stream[v1alpha2.api_pb2.RemovePodSandboxRequest, v1alpha2.api_pb2.RemovePodSandboxResponse]') -> None:
        pass

    @abc.abstractmethod
    async def PodSandboxStatus(self, stream: 'grpclib.server.Stream[v1alpha2.api_pb2.PodSandboxStatusRequest, v1alpha2.api_pb2.PodSandboxStatusResponse]') -> None:
        pass

    @abc.abstractmethod
    async def ListPodSandbox(self, stream: 'grpclib.server.Stream[v1alpha2.api_pb2.ListPodSandboxRequest, v1alpha2.api_pb2.ListPodSandboxResponse]') -> None:
        pass

    @abc.abstractmethod
    async def CreateContainer(self, stream: 'grpclib.server.Stream[v1alpha2.api_pb2.CreateContainerRequest, v1alpha2.api_pb2.CreateContainerResponse]') -> None:
        pass

    @abc.abstractmethod
    async def StartContainer(self, stream: 'grpclib.server.Stream[v1alpha2.api_pb2.StartContainerRequest, v1alpha2.api_pb2.StartContainerResponse]') -> None:
        pass

    @abc.abstractmethod
    async def StopContainer(self, stream: 'grpclib.server.Stream[v1alpha2.api_pb2.StopContainerRequest, v1alpha2.api_pb2.StopContainerResponse]') -> None:
        pass

    @abc.abstractmethod
    async def RemoveContainer(self, stream: 'grpclib.server.Stream[v1alpha2.api_pb2.RemoveContainerRequest, v1alpha2.api_pb2.RemoveContainerResponse]') -> None:
        pass

    @abc.abstractmethod
    async def ListContainers(self, stream: 'grpclib.server.Stream[v1alpha2.api_pb2.ListContainersRequest, v1alpha2.api_pb2.ListContainersResponse]') -> None:
        pass

    @abc.abstractmethod
    async def ContainerStatus(self, stream: 'grpclib.server.Stream[v1alpha2.api_pb2.ContainerStatusRequest, v1alpha2.api_pb2.ContainerStatusResponse]') -> None:
        pass

    @abc.abstractmethod
    async def UpdateContainerResources(self, stream: 'grpclib.server.Stream[v1alpha2.api_pb2.UpdateContainerResourcesRequest, v1alpha2.api_pb2.UpdateContainerResourcesResponse]') -> None:
        pass

    @abc.abstractmethod
    async def ReopenContainerLog(self, stream: 'grpclib.server.Stream[v1alpha2.api_pb2.ReopenContainerLogRequest, v1alpha2.api_pb2.ReopenContainerLogResponse]') -> None:
        pass

    @abc.abstractmethod
    async def ExecSync(self, stream: 'grpclib.server.Stream[v1alpha2.api_pb2.ExecSyncRequest, v1alpha2.api_pb2.ExecSyncResponse]') -> None:
        pass

    @abc.abstractmethod
    async def Exec(self, stream: 'grpclib.server.Stream[v1alpha2.api_pb2.ExecRequest, v1alpha2.api_pb2.ExecResponse]') -> None:
        pass

    @abc.abstractmethod
    async def Attach(self, stream: 'grpclib.server.Stream[v1alpha2.api_pb2.AttachRequest, v1alpha2.api_pb2.AttachResponse]') -> None:
        pass

    @abc.abstractmethod
    async def PortForward(self, stream: 'grpclib.server.Stream[v1alpha2.api_pb2.PortForwardRequest, v1alpha2.api_pb2.PortForwardResponse]') -> None:
        pass

    @abc.abstractmethod
    async def ContainerStats(self, stream: 'grpclib.server.Stream[v1alpha2.api_pb2.ContainerStatsRequest, v1alpha2.api_pb2.ContainerStatsResponse]') -> None:
        pass

    @abc.abstractmethod
    async def ListContainerStats(self, stream: 'grpclib.server.Stream[v1alpha2.api_pb2.ListContainerStatsRequest, v1alpha2.api_pb2.ListContainerStatsResponse]') -> None:
        pass

    @abc.abstractmethod
    async def PodSandboxStats(self, stream: 'grpclib.server.Stream[v1alpha2.api_pb2.PodSandboxStatsRequest, v1alpha2.api_pb2.PodSandboxStatsResponse]') -> None:
        pass

    @abc.abstractmethod
    async def ListPodSandboxStats(self, stream: 'grpclib.server.Stream[v1alpha2.api_pb2.ListPodSandboxStatsRequest, v1alpha2.api_pb2.ListPodSandboxStatsResponse]') -> None:
        pass

    @abc.abstractmethod
    async def UpdateRuntimeConfig(self, stream: 'grpclib.server.Stream[v1alpha2.api_pb2.UpdateRuntimeConfigRequest, v1alpha2.api_pb2.UpdateRuntimeConfigResponse]') -> None:
        pass

    @abc.abstractmethod
    async def Status(self, stream: 'grpclib.server.Stream[v1alpha2.api_pb2.StatusRequest, v1alpha2.api_pb2.StatusResponse]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/runtime.v1alpha2.RuntimeService/Version': grpclib.const.Handler(
                self.Version,
                grpclib.const.Cardinality.UNARY_UNARY,
                v1alpha2.api_pb2.VersionRequest,
                v1alpha2.api_pb2.VersionResponse,
            ),
            '/runtime.v1alpha2.RuntimeService/RunPodSandbox': grpclib.const.Handler(
                self.RunPodSandbox,
                grpclib.const.Cardinality.UNARY_UNARY,
                v1alpha2.api_pb2.RunPodSandboxRequest,
                v1alpha2.api_pb2.RunPodSandboxResponse,
            ),
            '/runtime.v1alpha2.RuntimeService/StopPodSandbox': grpclib.const.Handler(
                self.StopPodSandbox,
                grpclib.const.Cardinality.UNARY_UNARY,
                v1alpha2.api_pb2.StopPodSandboxRequest,
                v1alpha2.api_pb2.StopPodSandboxResponse,
            ),
            '/runtime.v1alpha2.RuntimeService/RemovePodSandbox': grpclib.const.Handler(
                self.RemovePodSandbox,
                grpclib.const.Cardinality.UNARY_UNARY,
                v1alpha2.api_pb2.RemovePodSandboxRequest,
                v1alpha2.api_pb2.RemovePodSandboxResponse,
            ),
            '/runtime.v1alpha2.RuntimeService/PodSandboxStatus': grpclib.const.Handler(
                self.PodSandboxStatus,
                grpclib.const.Cardinality.UNARY_UNARY,
                v1alpha2.api_pb2.PodSandboxStatusRequest,
                v1alpha2.api_pb2.PodSandboxStatusResponse,
            ),
            '/runtime.v1alpha2.RuntimeService/ListPodSandbox': grpclib.const.Handler(
                self.ListPodSandbox,
                grpclib.const.Cardinality.UNARY_UNARY,
                v1alpha2.api_pb2.ListPodSandboxRequest,
                v1alpha2.api_pb2.ListPodSandboxResponse,
            ),
            '/runtime.v1alpha2.RuntimeService/CreateContainer': grpclib.const.Handler(
                self.CreateContainer,
                grpclib.const.Cardinality.UNARY_UNARY,
                v1alpha2.api_pb2.CreateContainerRequest,
                v1alpha2.api_pb2.CreateContainerResponse,
            ),
            '/runtime.v1alpha2.RuntimeService/StartContainer': grpclib.const.Handler(
                self.StartContainer,
                grpclib.const.Cardinality.UNARY_UNARY,
                v1alpha2.api_pb2.StartContainerRequest,
                v1alpha2.api_pb2.StartContainerResponse,
            ),
            '/runtime.v1alpha2.RuntimeService/StopContainer': grpclib.const.Handler(
                self.StopContainer,
                grpclib.const.Cardinality.UNARY_UNARY,
                v1alpha2.api_pb2.StopContainerRequest,
                v1alpha2.api_pb2.StopContainerResponse,
            ),
            '/runtime.v1alpha2.RuntimeService/RemoveContainer': grpclib.const.Handler(
                self.RemoveContainer,
                grpclib.const.Cardinality.UNARY_UNARY,
                v1alpha2.api_pb2.RemoveContainerRequest,
                v1alpha2.api_pb2.RemoveContainerResponse,
            ),
            '/runtime.v1alpha2.RuntimeService/ListContainers': grpclib.const.Handler(
                self.ListContainers,
                grpclib.const.Cardinality.UNARY_UNARY,
                v1alpha2.api_pb2.ListContainersRequest,
                v1alpha2.api_pb2.ListContainersResponse,
            ),
            '/runtime.v1alpha2.RuntimeService/ContainerStatus': grpclib.const.Handler(
                self.ContainerStatus,
                grpclib.const.Cardinality.UNARY_UNARY,
                v1alpha2.api_pb2.ContainerStatusRequest,
                v1alpha2.api_pb2.ContainerStatusResponse,
            ),
            '/runtime.v1alpha2.RuntimeService/UpdateContainerResources': grpclib.const.Handler(
                self.UpdateContainerResources,
                grpclib.const.Cardinality.UNARY_UNARY,
                v1alpha2.api_pb2.UpdateContainerResourcesRequest,
                v1alpha2.api_pb2.UpdateContainerResourcesResponse,
            ),
            '/runtime.v1alpha2.RuntimeService/ReopenContainerLog': grpclib.const.Handler(
                self.ReopenContainerLog,
                grpclib.const.Cardinality.UNARY_UNARY,
                v1alpha2.api_pb2.ReopenContainerLogRequest,
                v1alpha2.api_pb2.ReopenContainerLogResponse,
            ),
            '/runtime.v1alpha2.RuntimeService/ExecSync': grpclib.const.Handler(
                self.ExecSync,
                grpclib.const.Cardinality.UNARY_UNARY,
                v1alpha2.api_pb2.ExecSyncRequest,
                v1alpha2.api_pb2.ExecSyncResponse,
            ),
            '/runtime.v1alpha2.RuntimeService/Exec': grpclib.const.Handler(
                self.Exec,
                grpclib.const.Cardinality.UNARY_UNARY,
                v1alpha2.api_pb2.ExecRequest,
                v1alpha2.api_pb2.ExecResponse,
            ),
            '/runtime.v1alpha2.RuntimeService/Attach': grpclib.const.Handler(
                self.Attach,
                grpclib.const.Cardinality.UNARY_UNARY,
                v1alpha2.api_pb2.AttachRequest,
                v1alpha2.api_pb2.AttachResponse,
            ),
            '/runtime.v1alpha2.RuntimeService/PortForward': grpclib.const.Handler(
                self.PortForward,
                grpclib.const.Cardinality.UNARY_UNARY,
                v1alpha2.api_pb2.PortForwardRequest,
                v1alpha2.api_pb2.PortForwardResponse,
            ),
            '/runtime.v1alpha2.RuntimeService/ContainerStats': grpclib.const.Handler(
                self.ContainerStats,
                grpclib.const.Cardinality.UNARY_UNARY,
                v1alpha2.api_pb2.ContainerStatsRequest,
                v1alpha2.api_pb2.ContainerStatsResponse,
            ),
            '/runtime.v1alpha2.RuntimeService/ListContainerStats': grpclib.const.Handler(
                self.ListContainerStats,
                grpclib.const.Cardinality.UNARY_UNARY,
                v1alpha2.api_pb2.ListContainerStatsRequest,
                v1alpha2.api_pb2.ListContainerStatsResponse,
            ),
            '/runtime.v1alpha2.RuntimeService/PodSandboxStats': grpclib.const.Handler(
                self.PodSandboxStats,
                grpclib.const.Cardinality.UNARY_UNARY,
                v1alpha2.api_pb2.PodSandboxStatsRequest,
                v1alpha2.api_pb2.PodSandboxStatsResponse,
            ),
            '/runtime.v1alpha2.RuntimeService/ListPodSandboxStats': grpclib.const.Handler(
                self.ListPodSandboxStats,
                grpclib.const.Cardinality.UNARY_UNARY,
                v1alpha2.api_pb2.ListPodSandboxStatsRequest,
                v1alpha2.api_pb2.ListPodSandboxStatsResponse,
            ),
            '/runtime.v1alpha2.RuntimeService/UpdateRuntimeConfig': grpclib.const.Handler(
                self.UpdateRuntimeConfig,
                grpclib.const.Cardinality.UNARY_UNARY,
                v1alpha2.api_pb2.UpdateRuntimeConfigRequest,
                v1alpha2.api_pb2.UpdateRuntimeConfigResponse,
            ),
            '/runtime.v1alpha2.RuntimeService/Status': grpclib.const.Handler(
                self.Status,
                grpclib.const.Cardinality.UNARY_UNARY,
                v1alpha2.api_pb2.StatusRequest,
                v1alpha2.api_pb2.StatusResponse,
            ),
        }


class RuntimeServiceStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.Version = grpclib.client.UnaryUnaryMethod(
            channel,
            '/runtime.v1alpha2.RuntimeService/Version',
            v1alpha2.api_pb2.VersionRequest,
            v1alpha2.api_pb2.VersionResponse,
        )
        self.RunPodSandbox = grpclib.client.UnaryUnaryMethod(
            channel,
            '/runtime.v1alpha2.RuntimeService/RunPodSandbox',
            v1alpha2.api_pb2.RunPodSandboxRequest,
            v1alpha2.api_pb2.RunPodSandboxResponse,
        )
        self.StopPodSandbox = grpclib.client.UnaryUnaryMethod(
            channel,
            '/runtime.v1alpha2.RuntimeService/StopPodSandbox',
            v1alpha2.api_pb2.StopPodSandboxRequest,
            v1alpha2.api_pb2.StopPodSandboxResponse,
        )
        self.RemovePodSandbox = grpclib.client.UnaryUnaryMethod(
            channel,
            '/runtime.v1alpha2.RuntimeService/RemovePodSandbox',
            v1alpha2.api_pb2.RemovePodSandboxRequest,
            v1alpha2.api_pb2.RemovePodSandboxResponse,
        )
        self.PodSandboxStatus = grpclib.client.UnaryUnaryMethod(
            channel,
            '/runtime.v1alpha2.RuntimeService/PodSandboxStatus',
            v1alpha2.api_pb2.PodSandboxStatusRequest,
            v1alpha2.api_pb2.PodSandboxStatusResponse,
        )
        self.ListPodSandbox = grpclib.client.UnaryUnaryMethod(
            channel,
            '/runtime.v1alpha2.RuntimeService/ListPodSandbox',
            v1alpha2.api_pb2.ListPodSandboxRequest,
            v1alpha2.api_pb2.ListPodSandboxResponse,
        )
        self.CreateContainer = grpclib.client.UnaryUnaryMethod(
            channel,
            '/runtime.v1alpha2.RuntimeService/CreateContainer',
            v1alpha2.api_pb2.CreateContainerRequest,
            v1alpha2.api_pb2.CreateContainerResponse,
        )
        self.StartContainer = grpclib.client.UnaryUnaryMethod(
            channel,
            '/runtime.v1alpha2.RuntimeService/StartContainer',
            v1alpha2.api_pb2.StartContainerRequest,
            v1alpha2.api_pb2.StartContainerResponse,
        )
        self.StopContainer = grpclib.client.UnaryUnaryMethod(
            channel,
            '/runtime.v1alpha2.RuntimeService/StopContainer',
            v1alpha2.api_pb2.StopContainerRequest,
            v1alpha2.api_pb2.StopContainerResponse,
        )
        self.RemoveContainer = grpclib.client.UnaryUnaryMethod(
            channel,
            '/runtime.v1alpha2.RuntimeService/RemoveContainer',
            v1alpha2.api_pb2.RemoveContainerRequest,
            v1alpha2.api_pb2.RemoveContainerResponse,
        )
        self.ListContainers = grpclib.client.UnaryUnaryMethod(
            channel,
            '/runtime.v1alpha2.RuntimeService/ListContainers',
            v1alpha2.api_pb2.ListContainersRequest,
            v1alpha2.api_pb2.ListContainersResponse,
        )
        self.ContainerStatus = grpclib.client.UnaryUnaryMethod(
            channel,
            '/runtime.v1alpha2.RuntimeService/ContainerStatus',
            v1alpha2.api_pb2.ContainerStatusRequest,
            v1alpha2.api_pb2.ContainerStatusResponse,
        )
        self.UpdateContainerResources = grpclib.client.UnaryUnaryMethod(
            channel,
            '/runtime.v1alpha2.RuntimeService/UpdateContainerResources',
            v1alpha2.api_pb2.UpdateContainerResourcesRequest,
            v1alpha2.api_pb2.UpdateContainerResourcesResponse,
        )
        self.ReopenContainerLog = grpclib.client.UnaryUnaryMethod(
            channel,
            '/runtime.v1alpha2.RuntimeService/ReopenContainerLog',
            v1alpha2.api_pb2.ReopenContainerLogRequest,
            v1alpha2.api_pb2.ReopenContainerLogResponse,
        )
        self.ExecSync = grpclib.client.UnaryUnaryMethod(
            channel,
            '/runtime.v1alpha2.RuntimeService/ExecSync',
            v1alpha2.api_pb2.ExecSyncRequest,
            v1alpha2.api_pb2.ExecSyncResponse,
        )
        self.Exec = grpclib.client.UnaryUnaryMethod(
            channel,
            '/runtime.v1alpha2.RuntimeService/Exec',
            v1alpha2.api_pb2.ExecRequest,
            v1alpha2.api_pb2.ExecResponse,
        )
        self.Attach = grpclib.client.UnaryUnaryMethod(
            channel,
            '/runtime.v1alpha2.RuntimeService/Attach',
            v1alpha2.api_pb2.AttachRequest,
            v1alpha2.api_pb2.AttachResponse,
        )
        self.PortForward = grpclib.client.UnaryUnaryMethod(
            channel,
            '/runtime.v1alpha2.RuntimeService/PortForward',
            v1alpha2.api_pb2.PortForwardRequest,
            v1alpha2.api_pb2.PortForwardResponse,
        )
        self.ContainerStats = grpclib.client.UnaryUnaryMethod(
            channel,
            '/runtime.v1alpha2.RuntimeService/ContainerStats',
            v1alpha2.api_pb2.ContainerStatsRequest,
            v1alpha2.api_pb2.ContainerStatsResponse,
        )
        self.ListContainerStats = grpclib.client.UnaryUnaryMethod(
            channel,
            '/runtime.v1alpha2.RuntimeService/ListContainerStats',
            v1alpha2.api_pb2.ListContainerStatsRequest,
            v1alpha2.api_pb2.ListContainerStatsResponse,
        )
        self.PodSandboxStats = grpclib.client.UnaryUnaryMethod(
            channel,
            '/runtime.v1alpha2.RuntimeService/PodSandboxStats',
            v1alpha2.api_pb2.PodSandboxStatsRequest,
            v1alpha2.api_pb2.PodSandboxStatsResponse,
        )
        self.ListPodSandboxStats = grpclib.client.UnaryUnaryMethod(
            channel,
            '/runtime.v1alpha2.RuntimeService/ListPodSandboxStats',
            v1alpha2.api_pb2.ListPodSandboxStatsRequest,
            v1alpha2.api_pb2.ListPodSandboxStatsResponse,
        )
        self.UpdateRuntimeConfig = grpclib.client.UnaryUnaryMethod(
            channel,
            '/runtime.v1alpha2.RuntimeService/UpdateRuntimeConfig',
            v1alpha2.api_pb2.UpdateRuntimeConfigRequest,
            v1alpha2.api_pb2.UpdateRuntimeConfigResponse,
        )
        self.Status = grpclib.client.UnaryUnaryMethod(
            channel,
            '/runtime.v1alpha2.RuntimeService/Status',
            v1alpha2.api_pb2.StatusRequest,
            v1alpha2.api_pb2.StatusResponse,
        )


class ImageServiceBase(abc.ABC):

    @abc.abstractmethod
    async def ListImages(self, stream: 'grpclib.server.Stream[v1alpha2.api_pb2.ListImagesRequest, v1alpha2.api_pb2.ListImagesResponse]') -> None:
        pass

    @abc.abstractmethod
    async def ImageStatus(self, stream: 'grpclib.server.Stream[v1alpha2.api_pb2.ImageStatusRequest, v1alpha2.api_pb2.ImageStatusResponse]') -> None:
        pass

    @abc.abstractmethod
    async def PullImage(self, stream: 'grpclib.server.Stream[v1alpha2.api_pb2.PullImageRequest, v1alpha2.api_pb2.PullImageResponse]') -> None:
        pass

    @abc.abstractmethod
    async def RemoveImage(self, stream: 'grpclib.server.Stream[v1alpha2.api_pb2.RemoveImageRequest, v1alpha2.api_pb2.RemoveImageResponse]') -> None:
        pass

    @abc.abstractmethod
    async def ImageFsInfo(self, stream: 'grpclib.server.Stream[v1alpha2.api_pb2.ImageFsInfoRequest, v1alpha2.api_pb2.ImageFsInfoResponse]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/runtime.v1alpha2.ImageService/ListImages': grpclib.const.Handler(
                self.ListImages,
                grpclib.const.Cardinality.UNARY_UNARY,
                v1alpha2.api_pb2.ListImagesRequest,
                v1alpha2.api_pb2.ListImagesResponse,
            ),
            '/runtime.v1alpha2.ImageService/ImageStatus': grpclib.const.Handler(
                self.ImageStatus,
                grpclib.const.Cardinality.UNARY_UNARY,
                v1alpha2.api_pb2.ImageStatusRequest,
                v1alpha2.api_pb2.ImageStatusResponse,
            ),
            '/runtime.v1alpha2.ImageService/PullImage': grpclib.const.Handler(
                self.PullImage,
                grpclib.const.Cardinality.UNARY_UNARY,
                v1alpha2.api_pb2.PullImageRequest,
                v1alpha2.api_pb2.PullImageResponse,
            ),
            '/runtime.v1alpha2.ImageService/RemoveImage': grpclib.const.Handler(
                self.RemoveImage,
                grpclib.const.Cardinality.UNARY_UNARY,
                v1alpha2.api_pb2.RemoveImageRequest,
                v1alpha2.api_pb2.RemoveImageResponse,
            ),
            '/runtime.v1alpha2.ImageService/ImageFsInfo': grpclib.const.Handler(
                self.ImageFsInfo,
                grpclib.const.Cardinality.UNARY_UNARY,
                v1alpha2.api_pb2.ImageFsInfoRequest,
                v1alpha2.api_pb2.ImageFsInfoResponse,
            ),
        }


class ImageServiceStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.ListImages = grpclib.client.UnaryUnaryMethod(
            channel,
            '/runtime.v1alpha2.ImageService/ListImages',
            v1alpha2.api_pb2.ListImagesRequest,
            v1alpha2.api_pb2.ListImagesResponse,
        )
        self.ImageStatus = grpclib.client.UnaryUnaryMethod(
            channel,
            '/runtime.v1alpha2.ImageService/ImageStatus',
            v1alpha2.api_pb2.ImageStatusRequest,
            v1alpha2.api_pb2.ImageStatusResponse,
        )
        self.PullImage = grpclib.client.UnaryUnaryMethod(
            channel,
            '/runtime.v1alpha2.ImageService/PullImage',
            v1alpha2.api_pb2.PullImageRequest,
            v1alpha2.api_pb2.PullImageResponse,
        )
        self.RemoveImage = grpclib.client.UnaryUnaryMethod(
            channel,
            '/runtime.v1alpha2.ImageService/RemoveImage',
            v1alpha2.api_pb2.RemoveImageRequest,
            v1alpha2.api_pb2.RemoveImageResponse,
        )
        self.ImageFsInfo = grpclib.client.UnaryUnaryMethod(
            channel,
            '/runtime.v1alpha2.ImageService/ImageFsInfo',
            v1alpha2.api_pb2.ImageFsInfoRequest,
            v1alpha2.api_pb2.ImageFsInfoResponse,
        )
